plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.13'

    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'bpos.server'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://mvnrepository.com/artifact/net.kemitix/sqlite-dialect'}
}

def hibernate_version = '6.1.7.Final'  // Use a single version across your project
//configurations.all {
//    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//        if (details.requested.group == 'javax.persistence') {
//            details.useTarget group: 'jakarta.persistence', name: details.requested.name, version: '3.0.0' // Ensure you specify the correct Jakarta version
//        }
//    }
//}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.hibernate') {
            details.useVersion(hibernate_version)
        }
        // Make sure no older versions of Hibernate are forced
    }
}


dependencies {
    implementation project(':BPositiveCommon')
    implementation project(':BPositiveCommon:BPositiveModel')
    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'
    implementation("org.hibernate.orm:hibernate-community-dialects:6.1.7.Final")
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "org.hibernate:hibernate-core:${hibernate_version}"
    implementation "org.hibernate:hibernate-jcache:${hibernate_version}"
    runtimeOnly 'org.xerial:sqlite-jdbc:3.30.1'  // Updated SQLite JDBC driver
//    implementation 'com.github.gwenn:sqlite-dialect:0.1.1'  // Check for a newer version if available
    implementation 'org.ehcache:ehcache:3.10.0'  // Example version, confirm compatibility
}



//configurations.all {
//    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//        if (details.requested.group == 'javax.persistence') {
//            details.useTarget group: 'jakarta.persistence', name: details.requested.name, version: 'the-jakarta-version'
//        }
//    }
//}
tasks.named('test') {
    useJUnitPlatform()
}
